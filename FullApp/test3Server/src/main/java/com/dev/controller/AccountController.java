package com.dev.controller;

import com.dev.model.Account;
import com.dev.model.Provider;
import com.dev.model.User;
import com.dev.repository.AccountRepository;
import com.dev.repository.ProviderRepository;
import com.dev.service.AccountService;
import com.dev.service.impl.AccountServiceImpl;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.*;

import javax.validation.Valid;
import java.util.List;


@RestController    // This means that this class is a Controller
@RequestMapping(path="/api") // This means URL's start with /demo (after Application path)
public class AccountController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private AccountServiceImpl accountService;

    @RequestMapping(value = "/users", method = RequestMethod.POST)
    public Account addAccount (@RequestBody String body) {
        try {
            ObjectMapper mapper = new ObjectMapper();
            Account account = (Account) mapper.readValue(body, Account.class);
            return accountService.add(account);
        }
        catch (Exception ex){
            return null;
        }

    }

    @RequestMapping(value = "/usersdel", method = RequestMethod.POST)
    //public void deleteAccount (@RequestParam(value="username") String body) {
    public List<Account> deleteAccount (@RequestParam(value = "username",required = true) String username) {
            return accountService.delete(username);
    }
    @RequestMapping(value = "/authenticate", method = RequestMethod.POST)
    public @ResponseBody String checkAccount (/*@RequestParam(value="username", defaultValue="") String name,
                                                               @RequestParam(value="password", defaultValue="") String pass*/
                                                                @RequestBody String body) {
        try {
            ObjectMapper mapper = new ObjectMapper();
            Account account = (Account) mapper.readValue(body, Account.class);
            Account temp=accountService.getAuth(account.getUsername(),account.getPassword());
            if(temp==null)return null;
            String a=mapper.writeValueAsString(temp);
            a=a.substring(0,a.length()-1)+"\"token\":\"\'fake-jwt-token\'\"}";
            return a;
        }
        catch (Exception ex){
            return null;
        }

    }

    @RequestMapping(path="/users")
    public Iterable<Account> getAllUsers() {
        // This returns a JSON or XML with the users
        return accountService.getAll();
    }
}